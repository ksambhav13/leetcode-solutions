{"data": {"question": {"questionId": "283", "titleSlug": "move-zeroes", "title": "Move Zeroes", "topicTags": [{"name": "Array"}, {"name": "Two Pointers"}], "codeSnippets": [{"langSlug": "cpp", "code": "class Solution {\npublic:\n    void moveZeroes(vector<int>& nums) {\n        \n    }\n};"}, {"langSlug": "java", "code": "class Solution {\n    public void moveZeroes(int[] nums) {\n        \n    }\n}"}, {"langSlug": "python", "code": "class Solution(object):\n    def moveZeroes(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: None Do not return anything, modify nums in-place instead.\n        \"\"\"\n        "}, {"langSlug": "python3", "code": "class Solution:\n    def moveZeroes(self, nums: List[int]) -> None:\n        \"\"\"\n        Do not return anything, modify nums in-place instead.\n        \"\"\"\n        "}, {"langSlug": "c", "code": "void moveZeroes(int* nums, int numsSize) {\n    \n}"}, {"langSlug": "csharp", "code": "public class Solution {\n    public void MoveZeroes(int[] nums) {\n        \n    }\n}"}, {"langSlug": "javascript", "code": "/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar moveZeroes = function(nums) {\n    \n};"}, {"langSlug": "typescript", "code": "/**\n Do not return anything, modify nums in-place instead.\n */\nfunction moveZeroes(nums: number[]): void {\n    \n};"}, {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return NULL\n     */\n    function moveZeroes(&$nums) {\n        \n    }\n}"}, {"langSlug": "swift", "code": "class Solution {\n    func moveZeroes(_ nums: inout [Int]) {\n        \n    }\n}"}, {"langSlug": "kotlin", "code": "class Solution {\n    fun moveZeroes(nums: IntArray): Unit {\n        \n    }\n}"}, {"langSlug": "dart", "code": "class Solution {\n  void moveZeroes(List<int> nums) {\n    \n  }\n}"}, {"langSlug": "golang", "code": "func moveZeroes(nums []int)  {\n    \n}"}, {"langSlug": "ruby", "code": "# @param {Integer[]} nums\n# @return {Void} Do not return anything, modify nums in-place instead.\ndef move_zeroes(nums)\n    \nend"}, {"langSlug": "scala", "code": "object Solution {\n    def moveZeroes(nums: Array[Int]): Unit = {\n        \n    }\n}"}, {"langSlug": "rust", "code": "impl Solution {\n    pub fn move_zeroes(nums: &mut Vec<i32>) {\n        \n    }\n}"}], "difficulty": "Easy", "content": "<p>Given an integer array <code>nums</code>, move all <code>0</code>&#39;s to the end of it while maintaining the relative order of the non-zero elements.</p>\n\n<p><strong>Note</strong> that you must do this in-place without making a copy of the array.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [0,1,0,3,12]\n<strong>Output:</strong> [1,3,12,0,0]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [0]\n<strong>Output:</strong> [0]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you minimize the total number of operations done?", "exampleTestcaseList": ["[0,1,0,3,12]", "[0]"], "metaData": {"name": "moveZeroes", "params": [{"name": "nums", "type": "integer[]"}], "return": {"type": "void"}, "output": {"paramindex": 0}}}}}